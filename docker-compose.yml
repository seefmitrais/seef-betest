version: '2.1'
services:
  seef_betest:
    build: .
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/app
    container_name: seef_betest
    command: npm run start
    depends_on:
      - mongodb
    environment:
      ENV: development
      APP_NAME: seef-betest
      MONGODB_URL: mongodb://mongodb:27017/db_seef_betest
      PORT: 3000
  queue_runner:
    build: .
    volumes:
      - .:/usr/app
    container_name: queue-runner
    command: sh -c "./queue_runner.sh"
    depends_on:
      - zookeeper
      - kafka
      - mongodb
    environment:
      ENV: development
      APP_NAME: seef-betest
      MONGODB_URL: mongodb://mongodb:27017/db_seef_betest
      KAFKA_URL: kafka:29092
  #database
  mongodb:
    image: mongo:4.2.1-bionic
    ports:
      - '27017:27017'
    volumes:
      - dbdata:/data/db
  #kafka setup
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'
  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic kafka_seef_betest --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
volumes:
  dbdata: